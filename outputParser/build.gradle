plugins {
    id 'application'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.graalvm.buildtools.native' version '0.10.4'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'dev.langchain4j:langchain4j:1.0.0-alpha1'
    implementation 'dev.langchain4j:langchain4j-ollama:1.0.0-alpha1'
    implementation 'org.slf4j:slf4j-simple:2.0.7'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


mainClassName = 'com.galiglobal.OutputParser'

shadowJar {
    manifest {
        attributes(
            'Main-Class': 'com.galiglobal.OutputParser'
        )
    }
}

application {
    mainClass = 'com.galiglobal.OutputParser'
}

graalvmNative {
    binaries {
        main {
            resources {
                autodetect()
            }
            buildArgs.add('--initialize-at-build-time=dev.langchain4j.model.ollama.OllamaApi')
        }
    }
}

// Fix for configuration cache issue
tasks.withType(org.graalvm.buildtools.gradle.tasks.GenerateResourcesConfigFile).configureEach {
    doNotTrackState("Configuration cache issue with DefaultUnlockedConfiguration")
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
